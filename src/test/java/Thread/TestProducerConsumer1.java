package Thread;/** * @program: spring-demo * @description: 生产者/消费者问题 * @author: gonghuihui * @create: 2019-04-03 10:50 **/public class TestProducerConsumer1 {    private static Integer count = 0;    private static final Integer FULL = 10;    public static String LOCK = "lock";    public static void main(String[] args) {        TestProducerConsumer1 testProducerConsumer1 = new TestProducerConsumer1();        new Thread(testProducerConsumer1.new Producer()).start();        new Thread(testProducerConsumer1.new Consumer()).start();        new Thread(testProducerConsumer1.new Producer()).start();        new Thread(testProducerConsumer1.new Consumer()).start();        new Thread(testProducerConsumer1.new Producer()).start();        new Thread(testProducerConsumer1.new Consumer()).start();        new Thread(testProducerConsumer1.new Producer()).start();        new Thread(testProducerConsumer1.new Consumer()).start();    }    class Producer implements Runnable {        @Override        public void run() {            for (int i = 0; i < 10; i++) {                try {                    Thread.sleep(3000);                } catch (Exception e) {                    e.printStackTrace();                }                synchronized (LOCK) {                    while (count == FULL) {                        try {                            LOCK.wait();                        } catch (Exception e) {                            e.printStackTrace();                        }                    }                    count++;                    System.out.println(Thread.currentThread().getName() + "生产者生产，目前共有" + count);                    LOCK.notifyAll();                }            }        }    }    class Consumer implements Runnable{        @Override        public void run() {            for (int i = 0; i < 10; i++) {                try {                    Thread.sleep(3000);                } catch (InterruptedException e) {                    e.printStackTrace();                }                synchronized (LOCK) {                    while (count == 0) {                        try {                            LOCK.wait();                        } catch (Exception e) {//                            e.printStackTrace();                        }                    }                    count--;                    System.out.println(Thread.currentThread().getName() + "消费者消费，目前总共有" + count);                    LOCK.notifyAll();                }            }        }    }}