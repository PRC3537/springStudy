package Thread;import java.util.Date;import java.util.concurrent.TimeUnit;/** * @program: spring-demo * @description: * @author: gonghuihui * @create: 2019-03-18 14:15 **/public class LockAa implements Runnable{    @Override    public void run() {        try {            System.out.println(new Date().toString() + " LockA 开始执行");            while (true) {                if (TestUnlock.a1.tryAcquire(1, TimeUnit.SECONDS)) {                    System.out.println(new Date().toString() + " LockA 锁住 obj1");                    if (TestUnlock.a2.tryAcquire(1,TimeUnit.SECONDS)) {                        System.out.println(new Date().toString() + " LockA 锁住 obj2");                        Thread.sleep(60 * 1000);  // do something                    } else {                        System.out.println(new Date().toString() + "LockA 锁 obj2 失败");                    }                } else {                    System.out.println(new Date().toString() + "LockA 锁 obj1 失败");                }                TestUnlock.a1.release();                TestUnlock.a2.release();                Thread.sleep(1000);  // 马上进行尝试， 实现情况下do something是不确定的            }        } catch (InterruptedException e) {            e.printStackTrace();        }    }}